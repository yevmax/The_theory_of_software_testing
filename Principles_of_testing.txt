Принципы тестирования:
1) Тестирование демонстрирует наличие дефектов, а не их отсутствие.
	Если дефектов не было обнаружено, это не значит, что их нет.

2) Исчерпывающее тестирование недостижимо.
	Протестировать абсолютно все невозможно. Необходимо отталкиваться от анализа рисков, от расстановки приоритетов. Нужно понимать на чем сосредоточить основные усилия.

3) Раннее тестирование сохраняет время и деньги.
	Чем раньше будет начато тестирование, тем дешевле оно будет так таковое. Чем позже начинается тестирование, тем дороже будет исправление ошибок. Например: на уровне тестирования требований уже можно обнаружить какие-либо ошибки, которые были допущены бизнес аналитиком, которые можно исправить уже на данном раннем этапе.

4) Скопление дефектов.
	Суть близка к принципу Парето. 80% дефектов сосредоточено в 20% функционала, который проверяется. Можно сконцентрировать свои тесты в какой-то области, тем самым уменьшить риски и сэкономить время.

5) Парадокс пестицида.
	Со временем тесты перестают находить дефекты. Нужно исправлять данные тесты, либо писать новые. Чаще всего встречается в автоматизированном тестировании. 
	Как минимизировать? Давать прогонять тесты другим участникам команды, производить ротации кадров, чтобы разные тестировщики в разное время тестировали одну и ту же функциональность. 

6) Тестирование зависит от контекста. 
	Подход к тестированию зависит от самого продукта. Соответственно подход к тестированию банковского приложения и игре будет разный. Как минимум разная безопасность, разные приоритеты и тд. Оборудование для медицины требует более тщательного тестирования.

7) Заблуждение об отсутствии ошибок.
	Не бывает такого, что ошибок вообще нет. Если теоретически представить, что тестировщикам дадут неограниченное количество времени и денег, для того, чтобы протестировать и проверить абсолютно все, а также найти все ошибки, то это невозможно. Даже отталкиваясь от предыдущих вышеуказанных принципов.